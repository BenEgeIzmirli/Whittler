[
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/blob.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "49",
        "line": "{",
        "surrounding_lines": "        if (sprintf(temp, \"%6u\", (unsigned int)blockID) != 6) /*produces 000000... 049999*/\n        {",
        "surrounding_5_lines": "    }\n    else\n    {\n        char temp[7]; /*this will contain 000000... 049999*/\n        if (sprintf(temp, \"%6u\", (unsigned int)blockID) != 6) /*produces 000000... 049999*/\n        {\n            /*Codes_SRS_BLOB_02_033: [ If any previous operation that doesn't have an explicit failure description fails then Blob_UploadMultipleBlocksFromSasUri shall fail and return BLOB_ERROR ]*/\n            LogError(\"failed to sprintf\");\n            result = BLOB_ERROR;\n        }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothub_client_core.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "508",
        "line": "queue_cb_info.iothub_callback.dev_twin_cb_info.size = size;",
        "surrounding_lines": "                (void)memcpy(queue_cb_info.iothub_callback.dev_twin_cb_info.payLoad, payLoad, size);\n                queue_cb_info.iothub_callback.dev_twin_cb_info.size = size;",
        "surrounding_5_lines": "                push_to_vector = MU_FAILURE;\n            }\n            else\n            {\n                (void)memcpy(queue_cb_info.iothub_callback.dev_twin_cb_info.payLoad, payLoad, size);\n                queue_cb_info.iothub_callback.dev_twin_cb_info.size = size;\n                push_to_vector = 0;\n            }\n        }\n        if (push_to_vector == 0)",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothub_client_core_ll.c",
        "function_name": "strcpy",
        "suggested_replacements": "strcpy_s",
        "line_number": "941",
        "line": "",
        "surrounding_lines": "                            (void)strcpy(IoTHubSuffix, whereIsDot+1);\n",
        "surrounding_5_lines": "                        else\n                        {\n                            memset(IoTHubName, 0, whereIsDot - hostname + 1);\n                            (void)memcpy(IoTHubName, hostname, whereIsDot - hostname);\n                            (void)strcpy(IoTHubSuffix, whereIsDot+1);\n\n                            actual_config.deviceId = device_config->deviceId;\n                            actual_config.deviceKey = device_config->deviceKey;\n                            actual_config.deviceSasToken = device_config->deviceSasToken;\n                            actual_config.iotHubName = IoTHubName;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothub_client_diagnostic.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "46",
        "line": "{",
        "surrounding_lines": "        if (sprintf(timeBuffer, \"%\"PRIu32, (int32_t)epochTime) < 0)\n        {",
        "surrounding_5_lines": "        }\n    }\n    else if (timeLen == sizeof(int32_t))\n    {\n        if (sprintf(timeBuffer, \"%\"PRIu32, (int32_t)epochTime) < 0)\n        {\n            LogError(\"Failed sprintf to timeBuffer with 4 bytes of time_t\");\n            result = NULL;\n        }\n        else",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothub_client_ll_uploadtoblob.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "284",
        "line": "insert_pos += iotHubNameLength;",
        "surrounding_lines": "                (void)memcpy((char*)insert_pos, config->iotHubName, iotHubNameLength);\n                insert_pos += iotHubNameLength;",
        "surrounding_5_lines": "            }\n            else\n            {\n                char* insert_pos = (char*)upload_data->hostname;\n                (void)memcpy((char*)insert_pos, config->iotHubName, iotHubNameLength);\n                insert_pos += iotHubNameLength;\n                *insert_pos = '.';\n                insert_pos += 1;\n                (void)memcpy(insert_pos, config->iotHubSuffix, iotHubSuffixLength); /*+1 will copy the \\0 too*/\n                insert_pos += iotHubSuffixLength;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothubtransport_amqp_twin_messenger.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "382",
        "line": "}",
        "surrounding_lines": "            (void)sprintf(result, TWIN_CORRELATION_ID_PROPERTY_FORMAT, unique_id);\n        }",
        "surrounding_5_lines": "            result = NULL;\n        }\n        else\n        {\n            (void)sprintf(result, TWIN_CORRELATION_ID_PROPERTY_FORMAT, unique_id);\n        }\n\n        free(unique_id);\n    }\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothubtransport_mqtt_common.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "1566",
        "line": "propName[nameLen] = '\\0';",
        "surrounding_lines": "                                        memcpy(propName, tokenData, nameLen);\n                                        propName[nameLen] = '\\0';",
        "surrounding_5_lines": "                                        result = MU_FAILURE;\n                                    }\n                                    else\n                                    {\n                                        memcpy(propName, tokenData, nameLen);\n                                        propName[nameLen] = '\\0';\n\n                                        memcpy(propValue, iterator + 1, valLen);\n                                        propValue[valLen] = '\\0';\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/iothubtransporthttp.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "1083",
        "line": "}",
        "surrounding_lines": "                memcpy(&result->transport_callbacks, cb_info, sizeof(TRANSPORT_CALLBACKS_INFO));\n            }",
        "surrounding_5_lines": "                result->doBatchedTransfers = false;\n                result->getMinimumPollingTime = DEFAULT_GETMINIMUMPOLLINGTIME;\n\n                result->transport_ctx = ctx;\n                memcpy(&result->transport_callbacks, cb_info, sizeof(TRANSPORT_CALLBACKS_INFO));\n            }\n            else\n            {\n                if (was_httpApiExHandle_ok) destroy_httpApiExHandle(result);\n                if (was_hostName_ok) destroy_hostName(result);",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/message_queue.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "332",
        "line": "}",
        "surrounding_lines": "            memcpy(result, value, sizeof(size_t));\n        }",
        "surrounding_5_lines": "            LogError(\"failed cloning option %s (malloc failed)\", name);\n        }\n        else\n        {\n            memcpy(result, value, sizeof(size_t));\n        }\n    }\n    else\n    {\n        LogError(\"option %s is invalid\", name);",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_client/src/uamqp_messaging.c",
        "function_name": "strncpy",
        "suggested_replacements": "strncpy_s",
        "line_number": "1011",
        "line": "if (IoTHubMessage_SetMessageUserIdSystemProperty(iothub_message_handle, string_buffer) != IOTHUB_MESSAGE_OK)",
        "surrounding_lines": "        strncpy(string_buffer, uamqp_message_property.bytes, uamqp_message_property.length > (MESSAGE_ID_MAX_SIZE - 1) ? MESSAGE_ID_MAX_SIZE - 1 : uamqp_message_property.length);\n        if (IoTHubMessage_SetMessageUserIdSystemProperty(iothub_message_handle, string_buffer) != IOTHUB_MESSAGE_OK)",
        "surrounding_5_lines": "    else\n    {\n        char string_buffer[MESSAGE_ID_MAX_SIZE];\n        memset(string_buffer, 0, MESSAGE_ID_MAX_SIZE);\n        strncpy(string_buffer, uamqp_message_property.bytes, uamqp_message_property.length > (MESSAGE_ID_MAX_SIZE - 1) ? MESSAGE_ID_MAX_SIZE - 1 : uamqp_message_property.length);\n        if (IoTHubMessage_SetMessageUserIdSystemProperty(iothub_message_handle, string_buffer) != IOTHUB_MESSAGE_OK)\n        {\n            LogError(\"Failed to set IOTHUB_MESSAGE_HANDLE 'user-id' property.\");\n            result = MU_FAILURE;\n        }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/iothub_service_client/src/iothub_devicetwin.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "424",
        "line": "temp[buffer_size] = '\\0';",
        "surrounding_lines": "            *strDestination = memcpy(temp, BUFFER_u_char(strSource), buffer_size);\n            temp[buffer_size] = '\\0';",
        "surrounding_5_lines": "            result = MU_FAILURE;\n        }\n        else\n        {\n            *strDestination = memcpy(temp, BUFFER_u_char(strSource), buffer_size);\n            temp[buffer_size] = '\\0';\n            result = 0;\n        }\n    }\n    return result;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/adapters/hsm_client_http_edge.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "136",
        "line": "hsm_client_http_edge->workload_hostname[chars_to_copy] = 0;",
        "surrounding_lines": "                memcpy(hsm_client_http_edge->workload_hostname, hostname_start, chars_to_copy);\n                hsm_client_http_edge->workload_hostname[chars_to_copy] = 0;",
        "surrounding_5_lines": "            else\n            {\n                const char* hostname_start = workload_uri + http_prefix_len;\n                size_t chars_to_copy = colon_begin - workload_uri - http_prefix_len;\n                memcpy(hsm_client_http_edge->workload_hostname, hostname_start, chars_to_copy);\n                hsm_client_http_edge->workload_hostname[chars_to_copy] = 0;\n                result = 0;\n            }\n        }\n        else if (hsm_client_http_edge->workload_protocol_type == WORKLOAD_PROTOCOL_TYPE_UNIX_DOMAIN_SOCKET)",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/adapters/hsm_client_riot.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "765",
        "line": "}",
        "surrounding_lines": "            memcpy(result, x509_client->root_ca_priv_pem, x509_client->root_ca_priv_length);\n        }",
        "surrounding_5_lines": "        }\n        else\n        {\n            memset(result, 0, x509_client->root_ca_priv_length + 1);\n            memcpy(result, x509_client->root_ca_priv_pem, x509_client->root_ca_priv_length);\n        }\n    }\n    return result;\n}\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/adapters/hsm_client_tpm.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "591",
        "line": "*key_len = (size_t)data_length;",
        "surrounding_lines": "                memcpy(*key, data_bytes, data_length);\n                *key_len = (size_t)data_length;",
        "surrounding_5_lines": "                result = MU_FAILURE;\n            }\n            else\n            {\n                memcpy(*key, data_bytes, data_length);\n                *key_len = (size_t)data_length;\n                result = 0;\n            }\n        }\n    }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/iothub_auth_client.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "330",
        "line": "if (total_len <= 0)",
        "surrounding_lines": "                    size_t total_len = sprintf(payload, \"%s\\n%s\", dev_auth_cred->sas_info.token_scope, expire_token);\n                    if (total_len <= 0)",
        "surrounding_5_lines": "                {\n                    unsigned char* data_value;\n                    size_t data_len;\n\n                    size_t total_len = sprintf(payload, \"%s\\n%s\", dev_auth_cred->sas_info.token_scope, expire_token);\n                    if (total_len <= 0)\n                    {\n                        result = NULL;\n                        LogError(\"Failure constructing hash payload.\");\n                    }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_auth_client.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "569",
        "line": "",
        "surrounding_lines": "            (void)sprintf(payload, \"%s\\n%s\", token_scope, expire_token);\n",
        "surrounding_5_lines": "        else\n        {\n            unsigned char* data_value;\n            size_t data_len;\n            (void)sprintf(payload, \"%s\\n%s\", token_scope, expire_token);\n\n            /* Codes_SRS_SECURE_ENCLAVE_CLIENT_07_031: [ prov_auth_get_certificate shall import the specified cert into the client using hsm_client_get_cert secure enclave function. ] */\n            if (sign_sas_data(handle, payload, &data_value, &data_len) == 0)\n            {\n                STRING_HANDLE urlEncodedSignature;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_device_ll_client.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "155",
        "line": "{",
        "surrounding_lines": "            else if (sprintf(token_scope, SAS_TOKEN_SCOPE_FMT, prov_info->scope_id, prov_info->registration_id) <= 0)\n            {",
        "surrounding_5_lines": "            {\n                LogError(\"Failure to allocate token scope\");\n                result = NULL;\n            }\n            else if (sprintf(token_scope, SAS_TOKEN_SCOPE_FMT, prov_info->scope_id, prov_info->registration_id) <= 0)\n            {\n                LogError(\"Failure to constructing token_scope\");\n                free(token_scope);\n                result = NULL;\n            }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_sasl_tpm.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "180",
        "line": "*send_len = payload_data_length;",
        "surrounding_lines": "            (void)memcpy(sasl_tpm_info->data_buffer + buff_offset, send_data, data_len);\n            *send_len = payload_data_length;",
        "surrounding_5_lines": "                buff_offset += scope_id_len;\n                (void)memcpy(sasl_tpm_info->data_buffer + buff_offset, reg_id, registration_id_len);\n                buff_offset += registration_id_len;\n            }\n            (void)memcpy(sasl_tpm_info->data_buffer + buff_offset, send_data, data_len);\n            *send_len = payload_data_length;\n            result = 0;\n        }\n    }\n    return result;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_transport_amqp_common.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "1011",
        "line": "{",
        "surrounding_lines": "    else if (sprintf(result, AMQP_SASL_USERNAME_FMT, amqp_info->scope_id, amqp_info->registration_id) <= 0)\n    {",
        "surrounding_5_lines": "    if ((result = malloc(length + 1)) == NULL)\n    {\n        LogError(\"Failure allocating username\");\n    }\n    else if (sprintf(result, AMQP_SASL_USERNAME_FMT, amqp_info->scope_id, amqp_info->registration_id) <= 0)\n    {\n        LogError(\"Failure creating mqtt username\");\n        free(result);\n        result = NULL;\n    }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_transport_http_client.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "335",
        "line": "{",
        "surrounding_lines": "                if (sprintf(result, PROV_REGISTRATION_URI_FMT, STRING_c_str(encoded_scope), STRING_c_str(encoded_reg_id), http_info->api_version) == 0)\n                {",
        "surrounding_5_lines": "                LogError(\"Failure allocating url path\");\n            }\n            else\n            {\n                if (sprintf(result, PROV_REGISTRATION_URI_FMT, STRING_c_str(encoded_scope), STRING_c_str(encoded_reg_id), http_info->api_version) == 0)\n                {\n                    LogError(\"Failure constructing url path\");\n                    free(result);\n                    result = NULL;\n                }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/prov_transport_mqtt_common.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "502",
        "line": "{",
        "surrounding_lines": "    else if (sprintf(result, MQTT_USERNAME_FMT, mqtt_info->scope_id, mqtt_info->registration_id, mqtt_info->api_version, PROV_DEVICE_CLIENT_VERSION) <= 0)\n    {",
        "surrounding_5_lines": "    {\n        LogError(\"Failure allocating username\");\n        result = NULL;\n    }\n    else if (sprintf(result, MQTT_USERNAME_FMT, mqtt_info->scope_id, mqtt_info->registration_id, mqtt_info->api_version, PROV_DEVICE_CLIENT_VERSION) <= 0)\n    {\n        LogError(\"Failure creating mqtt username\");\n        free(result);\n        result = NULL;\n    }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/sec_device_module_tpm.c",
        "function_name": "strcat",
        "suggested_replacements": "strcat_s",
        "line_number": "108",
        "line": "}",
        "surrounding_lines": "        strcat(result, hex_val);\n    }",
        "surrounding_5_lines": "    char hex_val[3];\n    for (size_t index = 0; index < key_length; index++)\n    {\n        sprintf(hex_val, \"%02x\", key_value[index]);\n        strcat(result, hex_val);\n    }\n    return result;\n}\n\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_client/src/secure_device_tpm.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "330",
        "line": "sen_create.sensitive.data.t.size = inner_wrap_key.t.size;",
        "surrounding_lines": "            memcpy(sen_create.sensitive.data.t.buffer, inner_wrap_key.t.buffer, inner_wrap_key.t.size);\n            sen_create.sensitive.data.t.size = inner_wrap_key.t.size;",
        "surrounding_5_lines": "            symTemplate.publicArea.parameters.symDetail.sym.algorithm = TPM_ALG_AES;\n            symTemplate.publicArea.parameters.symDetail.sym.keyBits.sym = inner_wrap_key.t.size * 8;\n            symTemplate.publicArea.parameters.symDetail.sym.mode.sym = TPM_ALG_CFB;\n\n            memcpy(sen_create.sensitive.data.t.buffer, inner_wrap_key.t.buffer, inner_wrap_key.t.size);\n            sen_create.sensitive.data.t.size = inner_wrap_key.t.size;\n\n            if (TSS_Create(&sec_info->tpm_device, &NullPwSession, TPM_20_SRK_HANDLE, &sen_create, &symTemplate, &sym_priv, &sym_pub) != TPM_RC_SUCCESS)\n            {\n                LogError(\"Failed to inject symmetric key data\");",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/provisioning_service_client/src/provisioning_service_client.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "276",
        "line": "if (HTTPHeaders_AddHeaderNameValuePair(headers, HEADER_KEY_MAX_ITEM_COUNT, page_size_s) != HTTP_HEADERS_OK)",
        "surrounding_lines": "            sprintf(page_size_s, \"%d\", (int)page_size);\n            if (HTTPHeaders_AddHeaderNameValuePair(headers, HEADER_KEY_MAX_ITEM_COUNT, page_size_s) != HTTP_HEADERS_OK)",
        "surrounding_5_lines": "    {\n        if (page_size != NO_MAX_PAGE_SIZE)\n        {\n            char page_size_s[21]; //21 characters covers all 64bit numbers\n            sprintf(page_size_s, \"%d\", (int)page_size);\n            if (HTTPHeaders_AddHeaderNameValuePair(headers, HEADER_KEY_MAX_ITEM_COUNT, page_size_s) != HTTP_HEADERS_OK)\n            {\n                LogError(\"Failure adding max item count header\");\n                result = MU_FAILURE;\n            }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/inc/serializer.h",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "1291",
        "line": "result = AGENT_DATA_TYPES_OK;",
        "surrounding_lines": "        (void)memcpy(dest->GUID, agentData->value.edmGuid.GUID, 16);\n        result = AGENT_DATA_TYPES_OK;",
        "surrounding_5_lines": "        result = AGENT_DATA_TYPES_INVALID_ARG;\n    }\n    else\n    {\n        (void)memcpy(dest->GUID, agentData->value.edmGuid.GUID, 16);\n        result = AGENT_DATA_TYPES_OK;\n    }\n    return result;\n}\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/inc/serializer_devicetwin.h",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "30",
        "line": "copyOfPayload[size] = '\\0';",
        "surrounding_lines": "        (void)memcpy(copyOfPayload, payLoad, size);\n        copyOfPayload[size] = '\\0';",
        "surrounding_5_lines": "        LogError(\"unable to malloc\\n\");\n    }\n    else\n    {\n        (void)memcpy(copyOfPayload, payLoad, size);\n        copyOfPayload[size] = '\\0';\n\n        bool parseDesiredNode = (update_state == DEVICE_TWIN_UPDATE_COMPLETE);\n\n        if (CodeFirst_IngestDesiredProperties(userContextCallback, copyOfPayload, parseDesiredNode) != CODEFIRST_OK)",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/agenttypesystem.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "3733",
        "line": "{",
        "surrounding_lines": "                    else if (memcpy(temp, source + 1, strLength - 2) == NULL)\n                    {",
        "surrounding_5_lines": "                    {\n                        result = AGENT_DATA_TYPES_ERROR;\n                        LogError(\"(result = %s)\", MU_ENUM_TO_STRING(AGENT_DATA_TYPES_RESULT, result));\n                    }\n                    else if (memcpy(temp, source + 1, strLength - 2) == NULL)\n                    {\n                        free(temp);\n\n                        result = AGENT_DATA_TYPES_ERROR;\n                        LogError(\"(result = %s)\", MU_ENUM_TO_STRING(AGENT_DATA_TYPES_RESULT, result));",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/codefirst.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "1003",
        "line": "g_DeviceCount--;",
        "surrounding_lines": "                (void)memcpy(&g_Devices[i], &g_Devices[i + 1], (g_DeviceCount - i - 1) * sizeof(DEVICE_HEADER_DATA*));\n                g_DeviceCount--;",
        "surrounding_5_lines": "                // Delete the Created Schema if all the devices are unassociated\n                Schema_DestroyIfUnused(g_Devices[i]->ModelHandle);\n\n                DestroyDevice(g_Devices[i]);\n                (void)memcpy(&g_Devices[i], &g_Devices[i + 1], (g_DeviceCount - i - 1) * sizeof(DEVICE_HEADER_DATA*));\n                g_DeviceCount--;\n                break;\n            }\n        }\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/commanddecoder.c",
        "function_name": "strncpy",
        "suggested_replacements": "strncpy_s",
        "line_number": "439",
        "line": "relativeActionPath[relativeActionPathLength] = 0;",
        "surrounding_lines": "                strncpy(relativeActionPath, actionPath, relativeActionPathLength);\n                relativeActionPath[relativeActionPathLength] = 0;",
        "surrounding_5_lines": "                result = EXECUTE_COMMAND_ERROR;\n            }\n            else\n            {\n                strncpy(relativeActionPath, actionPath, relativeActionPathLength);\n                relativeActionPath[relativeActionPathLength] = 0;\n\n                /* no slash found, this must be an action */\n                result = DecodeAndExecuteModelAction(commandDecoderInstance, schemaHandle, modelHandle, relativeActionPath, actionName, commandNode);\n",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/datamarshaller.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "202",
        "line": "*destination = temp;",
        "surrounding_lines": "                                (void)memcpy(temp, STRING_c_str(payload), resultSize);\n                                *destination = temp;",
        "surrounding_5_lines": "                                LOG_DATA_MARSHALLER_ERROR;\n                            }\n                            else\n                            {\n                                (void)memcpy(temp, STRING_c_str(payload), resultSize);\n                                *destination = temp;\n                                *destinationSize = resultSize;\n                                result = DATA_MARSHALLER_OK;\n                            }\n                        }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/jsondecoder.c",
        "function_name": "sprintf",
        "suggested_replacements": "sprintf_s",
        "line_number": "453",
        "line": "{",
        "surrounding_lines": "            if (sprintf(arrayIndexStr, \"%d\", arrayIndex++) < 0)\n            {",
        "surrounding_5_lines": "            char arrayIndexStr[22];\n            MULTITREE_HANDLE childNode;\n\n            /* Codes_SRS_JSON_DECODER_99_039:[ For array elements the multi tree node name shall be the string representation of the array index.] */\n            if (sprintf(arrayIndexStr, \"%d\", arrayIndex++) < 0)\n            {\n                result = JSON_DECODER_ERROR;\n                break;\n            }\n            /* Codes_SRS_JSON_DECODER_99_003:[ When a JSON element is decoded from the JSON object then a leaf shall be added to the MultiTree.] */",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/serializer/src/multitree.c",
        "function_name": "memcpy",
        "suggested_replacements": "memcpy_s",
        "line_number": "298",
        "line": "{",
        "surrounding_lines": "            else if (memcpy(firstInnerNodeName, destinationPath, whereIsDelimiter - destinationPath) == NULL)\n            {",
        "surrounding_5_lines": "                /*Codes_SRS_MULTITREE_99_025:[ The function shall return MULTITREE_ERROR to indicate any other error not specified here.]*/\n                result = MULTITREE_ERROR;\n                LogError(\"Destination path is too large %lu\", (unsigned long)(whereIsDelimiter - destinationPath));\n            }\n            else if (memcpy(firstInnerNodeName, destinationPath, whereIsDelimiter - destinationPath) == NULL)\n            {\n                /*Codes_SRS_MULTITREE_99_025:[ The function shall return MULTITREE_ERROR to indicate any other error not specified here.]*/\n                result = MULTITREE_ERROR;\n                LogError(\"(result = MULTITREE_ERROR)\");\n            }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/testtools/iothub_test/src/iothub_account.c",
        "function_name": "strcpy",
        "suggested_replacements": "strcpy_s",
        "line_number": "1086",
        "line": "",
        "surrounding_lines": "                            strcpy(tokenValue, STRING_c_str(tokenString));\n",
        "surrounding_5_lines": "                    {\n                        while ((STRING_TOKENIZER_get_next_token(tokenizer, tokenString, \"=\") == 0))\n                        {\n                            char tokenValue[128];\n                            strcpy(tokenValue, STRING_c_str(tokenString));\n\n                            if (STRING_TOKENIZER_get_next_token(tokenizer, tokenString, \";\") != 0)\n                            {\n                                break;\n                            }",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    },
    {
        "ruleset": "Microsoft SDL Banned APIs",
        "severity": "error",
        "filename": "C:/dshared/IoT Hub/repos/azure-iot-sdk-c-master/testtools/iothub_test/src/iothubtest.c",
        "function_name": "strcpy",
        "suggested_replacements": "strcpy_s",
        "line_number": "377",
        "line": "dvhInfo->hostName[endName - beginName] = '.';",
        "surrounding_lines": "            (void)strcpy(dvhInfo->hostName, dvhInfo->iotHubName);\n            dvhInfo->hostName[endName - beginName] = '.';",
        "surrounding_5_lines": "            result = MU_FAILURE;\n        }\n        else\n        {\n            (void)strcpy(dvhInfo->hostName, dvhInfo->iotHubName);\n            dvhInfo->hostName[endName - beginName] = '.';\n            result = 0;\n        }\n    }\n    return result;",
        "whittler_filename": ".\\staticanalysis-IOT-runs\\azure-iot-sdk-c-master.ripsaw.json"
    }
]